<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>SpringMVC on 袁阊越</title>
    <link>http://example.org/tags/springmvc/</link>
    <description>Recent content in SpringMVC on 袁阊越</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 13 Aug 2019 08:56:37 +0800</lastBuildDate>
    
	<atom:link href="http://example.org/tags/springmvc/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>SpringBoot与web开发(四)-----登录拦截</title>
      <link>http://example.org/post/springboot%E4%B8%8Eweb%E5%BC%80%E5%8F%91%E5%9B%9B/</link>
      <pubDate>Tue, 13 Aug 2019 08:56:37 +0800</pubDate>
      
      <guid>http://example.org/post/springboot%E4%B8%8Eweb%E5%BC%80%E5%8F%91%E5%9B%9B/</guid>
      <description>准备工作  页面downloadboostrap的官方实例页面，方便练习
资源来自：https://getbootstrap.com/docs/4.3/examples/
 资源的目录如下：
1.controller层 package com.changyue.springbootresetfucrud.controller; import org.springframework.stereotype.Controller; import org.springframework.util.StringUtils; import org.springframework.web.bind.annotation.PostMapping; import org.springframework.web.bind.annotation.RequestParam; import javax.servlet.http.HttpSession; import java.util.Map; /** * @program: spring-boot-restful-crud * @description: 用户控制器 * @author: YuanChangYue * @create: 2019-08-13 17:59 */ @Controller public class LoginController { /** * 用户登录 * * @param username 用户名 默认测试 123 * @param password 密码 默认测试 123 * @param map map * @param httpSession session * @return 页面名称 */ @PostMapping(&amp;quot;/user/login&amp;quot;) public String login(@RequestParam(&amp;quot;username&amp;quot;) String username, @RequestParam(&amp;quot;password&amp;quot;) String password, Map&amp;lt;String, Object&amp;gt; map, HttpSession httpSession) { if (&amp;quot;123&amp;quot;.</description>
    </item>
    
    <item>
      <title>SpringBoot与Web开发(三)-----Spring MVC</title>
      <link>http://example.org/post/springboot%E4%B8%8Eweb%E5%BC%80%E5%8F%91%E4%B8%89/</link>
      <pubDate>Mon, 12 Aug 2019 16:36:54 +0800</pubDate>
      
      <guid>http://example.org/post/springboot%E4%B8%8Eweb%E5%BC%80%E5%8F%91%E4%B8%89/</guid>
      <description>Spring Boot 与 Spring MVC  根据SpringBoot 官方文档中的资料 ，可以看出SpringBoot和SpringMVC的关系。
本章节提到的官文文档地址如下： &amp;lt;https://docs.spring.io/spring-boot/docs/2.1.7.RELEASE/reference/html/boot-features-developing-web-applications.html#boot-features-spring-mvc-auto-configuration
 1. Spring Boot 中Spring MVC 自动配置 官方文档中的原文如下：
Spring Boot provides auto-configuration for Spring MVC that works well with most applications.
The auto-configuration adds the following features on top of Spring’s defaults:
 Inclusion of ContentNegotiatingViewResolver and BeanNameViewResolver beans.
 自动配置viewResolver （视图解析器：根据方法返回的值获得视图对象 ） ContentNegotiatingViewResolver ： 组合所有的试图解析器 自定义：==可以自己给容器中添加视图解析器 ，自动为我们组合起来==  Support for serving static resources, including support for WebJars (covered later in this document)).</description>
    </item>
    
  </channel>
</rss>